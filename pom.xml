<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>sk</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<!-- War 패키징시 사용 -->
	<!-- <packaging>jar</packaging> -->

	<name>demo</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.4.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>


		<spring.boot.starter>1.5.4.RELEASE</spring.boot.starter>
		<spring.boot.starter.log4j2>1.5.4.RELEASE</spring.boot.starter.log4j2>
		<spring.boot.starter.web>1.5.4.RELEASE</spring.boot.starter.web>
		<spring.boot.starter.thymeleaf>1.5.4.RELEASE</spring.boot.starter.thymeleaf>
		<spring.cloud.spring.service.conneter>1.2.4.RELEASE</spring.cloud.spring.service.conneter>
		<spring.cloud.core>1.2.4.RELEASE</spring.cloud.core>
		<spring.cloud.cloudfoundry.connector>1.2.4.RELEASE</spring.cloud.cloudfoundry.connector>
		<spring.boot.starter.data.mongodb>1.5.4.RELEASE</spring.boot.starter.data.mongodb>
		<mongo.java.driver>3.4.2</mongo.java.driver>
		<spring.boot.starter.amqp>1.5.4.RELEASE</spring.boot.starter.amqp>
		<spring.boot.starter.data.redis>1.5.4.RELEASE</spring.boot.starter.data.redis>
		<org.javaswift.joss>0.9.7</org.javaswift.joss>
		<spring.cloud.starter.config>1.3.1.RELEASE</spring.cloud.starter.config>
		<spring.cloud.starter.bus.amqp>1.3.1.RELEASE</spring.cloud.starter.bus.amqp>
		<spring.boot.starter.hystrix>1.3.4.RELEASE</spring.boot.starter.hystrix>
		<spring.boot.starter.test>1.5.4.RELEASE</spring.boot.starter.test>
		<spring.boot.starter.actuator>1.5.4.RELEASE</spring.boot.starter.actuator>
		<spring.boot.devtools>1.5.4.RELEASE</spring.boot.devtools>
		<spring.boot.eureka>1.3.1.RELEASE</spring.boot.eureka>
		<httpcomponents.httpclient>4.5.2</httpcomponents.httpclient>
		<json.path>2.3.0</json.path>
		<org.pacesys.openstack4j>3.0.3</org.pacesys.openstack4j>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<version>${spring.boot.starter}</version>
			<exclusions><!-- 로그백 제외 -->
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
			<version>${spring.boot.starter.log4j2}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring.boot.starter.web}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
			<version>${spring.boot.starter.thymeleaf}</version>
		</dependency>

		<!-- War 패키징시 사용 -->
		<!-- <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-tomcat</artifactId> 
			<scope>provided</scope> </dependency> -->

		<!-- Spring Cloud Connector Start -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-spring-service-connector</artifactId>
			<version>${spring.cloud.spring.service.conneter}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-core</artifactId>
			<version>${spring.cloud.core}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-cloudfoundry-connector</artifactId>
			<version>${spring.cloud.cloudfoundry.connector}</version>
		</dependency>
		<!-- Spring Cloud Connector End -->

		<!-- MongoDB Dependency Start -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
			<version>${spring.boot.starter.data.mongodb}</version>
			<exclusions>
				<exclusion>
					<groupId>org.mongodb</groupId>
					<artifactId>mongo-java-driver</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>${mongo.java.driver}</version>
		</dependency>

		<!-- MongoDB Dependency End -->

		<!-- RabbitMQ Start -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-amqp</artifactId>
			<version>${spring.boot.starter.amqp}</version>
		</dependency>
		<!-- RabbitMQ End -->

		<!-- Redis Start -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
			<version>${spring.boot.starter.data.redis}</version>
		</dependency>

		<!-- <dependency> <groupId>org.apache.commons</groupId> <artifactId>commons-pool2</artifactId> 
			</dependency> -->
		<!-- Redis End -->

		<!-- MySql Connector Start -->
		<!-- <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> 
			</dependency> -->
		<!-- MySql Connector End -->

		<!-- Swift(Object storage) Start -->
		<dependency>
			<groupId>org.javaswift</groupId>
			<artifactId>joss</artifactId>
			<version>${org.javaswift.joss}</version>
		</dependency>
		<!-- Swift(Object storage) End -->

		<!-- Cloud config Start -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
			<version>${spring.cloud.starter.config}</version>
		</dependency>

		<!-- Cloud config End -->

		<!-- Cloud bus Start -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-bus-amqp</artifactId>
			<version>${spring.cloud.starter.bus.amqp}</version>
		</dependency>
		<!-- Cloud bus End -->

		<!-- Eureka Client + Ribbon Start -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
			<version>${spring.boot.eureka}</version>
		</dependency>
		<!-- Eureka Client + Ribbon End -->

		<!-- Hystrix Start -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-hystrix</artifactId>
			<version>${spring.boot.starter.hystrix}</version>
		</dependency>
		<!-- Hystrix  End -->
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<version>${spring.boot.starter.actuator}</version>
		</dependency>

		
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<version>${spring.boot.devtools}</version>

		</dependency>
		<!-- <dependency>
	    	<groupId>org.springframework.cloud</groupId>
		    <artifactId>spring-cloud-netflix-hystrix-stream</artifactId>
		    <exclusions>로그백 제외
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		    <version>1.3.4.RELEASE</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework.cloud</groupId>
		    <artifactId>spring-cloud-starter-stream-rabbit</artifactId>
		    <version>1.2.1.RELEASE</version>
		</dependency> -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId> 
		</dependency>
		<!-- <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-jdbc</artifactId> 
			</dependency> -->

		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>${json.path}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>${httpcomponents.httpclient}</version>
			<!-- <scope>test</scope> -->
		</dependency>
		<!-- <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-security</artifactId> 
			</dependency> -->

		<dependency>
			<groupId>org.pacesys</groupId>
			<artifactId>openstack4j</artifactId>
			<version>${org.pacesys.openstack4j}</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>
